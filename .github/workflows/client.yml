name: Client Builder
on:
  push:
    branches:
      - main
jobs:
  build_and_push:
    name: Build and push image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/multi-22-client:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/multi-22-client:latest
          cache-to: type=inline
  update-instance:
    name: Update instance image
    runs-on: ubuntu-latest
    needs: [build_and_push]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Format Terraform configuration
        id: fmt
        working-directory: ./terraform
        run: terraform fmt
      - name: Initialize Terraform
        id: init
        working-directory: ./terraform
        run: terraform init
      - name: SSH into Instance
        working-directory: ./terraform
        run: |-
          terraform output -raw ssh_private_key > terraform.pem
          chmod 400 terraform.pem
          ssh ec2-user@$(terraform output -raw instance_public_ip) < ../init.sh -o StrictHostKeyChecking=no -i ./terraform.pem
